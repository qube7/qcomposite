<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="6,4,6,4" />
        <Setter Property="Height" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Shortcut" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Arrow" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="1"
                                   Grid.ColumnSpan="3"
                                   Fill="{DynamicResource Control.BorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{DynamicResource Control.CornerRadius}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  ContentSource="Icon"
                                  Margin="0,0,6,0"
                                  Width="16"
                                  Height="16"
                                  VerticalAlignment="Center">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Stretch" Value="Uniform" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Grid x:Name="CheckMark"
                      Grid.Column="0"
                      Margin="0,0,6,0"
                      Width="16"
                      Height="16"
                      VerticalAlignment="Center"
                      Visibility="Collapsed">
                    <Rectangle Fill="{DynamicResource Control.Background}" />
                    <Path x:Name="Checked"
                          Data="{DynamicResource Geometry.CheckMark}"
                          Fill="{DynamicResource Control.Checked.BorderBrush}"
                          Stretch="Uniform"
                          Width="10"
                          Height="10"
                          HorizontalAlignment="Center"
                          UseLayoutRounding="True"
                          Visibility="Collapsed" />
                </Grid>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Checked" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{DynamicResource Control.CornerRadius}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  ContentSource="Icon"
                                  Margin="0,0,6,0"
                                  Width="16"
                                  Height="16"
                                  VerticalAlignment="Center">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Stretch" Value="Uniform" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Popup x:Name="PART_Popup"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       AllowsTransparency="True"
                       Placement="Bottom"
                       HorizontalOffset="1"
                       VerticalOffset="1"
                       Focusable="False">
                    <Grid Margin="6,6,6,6">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="6" Opacity="0.3" />
                        </Grid.Effect>
                        <Border Background="{DynamicResource Control.Background}"
                                BorderBrush="{DynamicResource Control.BorderBrush}"
                                BorderThickness="{DynamicResource Control.BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}"
                                HorizontalAlignment="Stretch">
                            <ScrollViewer>
                                <ItemsPresenter Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{DynamicResource Control.CornerRadius}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Shortcut" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Arrow" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  ContentSource="Icon"
                                  Margin="0,0,10,0"
                                  Width="16"
                                  Height="16"
                                  VerticalAlignment="Center">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Stretch" Value="Uniform" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Grid x:Name="CheckMark"
                      Grid.Column="0"
                      Margin="0,0,10,0"
                      Width="16"
                      Height="16"
                      VerticalAlignment="Center"
                      Visibility="Collapsed">
                    <Rectangle Fill="{DynamicResource Control.Background}" />
                    <Path x:Name="Checked"
                          Data="{DynamicResource Geometry.CheckMark}"
                          Fill="{DynamicResource Control.Checked.BorderBrush}"
                          Stretch="Uniform"
                          Width="10"
                          Height="10"
                          HorizontalAlignment="Center"
                          UseLayoutRounding="True"
                          Visibility="Collapsed" />
                </Grid>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="Gesture"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="24,0,0,0"
                           VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Checked" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="InputGestureText" Value="{x:Null}">
                <Setter TargetName="Gesture" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{DynamicResource Control.CornerRadius}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Shortcut" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItem.Arrow" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  ContentSource="Icon"
                                  Margin="0,0,10,0"
                                  Width="16"
                                  Height="16"
                                  VerticalAlignment="Center">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Stretch" Value="Uniform" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="Gesture"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="24,0,0,0"
                           VerticalAlignment="Center" />
                <Path x:Name="Glyph"
                      Grid.Column="3"
                      Data="{DynamicResource Geometry.ChevronRight}"
                      Fill="{DynamicResource Control.BorderBrush}"
                      Stretch="Uniform"
                      Margin="6,0,0,0"
                      Width="10"
                      Height="10"
                      VerticalAlignment="Center"
                      UseLayoutRounding="True" />
                <Popup x:Name="PART_Popup"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       AllowsTransparency="True"
                       Placement="Right"
                       HorizontalOffset="1"
                       VerticalOffset="1"
                       Focusable="False">
                    <Grid Margin="6,6,6,6">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="6" Opacity="0.3" />
                        </Grid.Effect>
                        <Border Background="{DynamicResource Control.Background}"
                                BorderBrush="{DynamicResource Control.BorderBrush}"
                                BorderThickness="{DynamicResource Control.BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}"
                                HorizontalAlignment="Stretch">
                            <ScrollViewer>
                                <ItemsPresenter Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource Control.MouseOver.BorderBrush}" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="InputGestureText" Value="{x:Null}">
                <Setter TargetName="Gesture" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubmenuItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
