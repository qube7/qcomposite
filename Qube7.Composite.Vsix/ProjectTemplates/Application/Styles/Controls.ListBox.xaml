<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource Control.CornerRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.Background}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.MouseOver.Background}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="MinWidth" Value="{DynamicResource Control.Width}" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}">
                            <ScrollViewer Padding="{TemplateBinding Padding}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="Invalid"
                                BorderBrush="{DynamicResource Control.Invalid.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="Error"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Content="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource TemplatedParent}}"
                                         Style="{DynamicResource ToolTip.Invalid}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  Margin="1,-4,-4,0"
                                  Width="12"
                                  Height="12"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top">
                                <Path Data="M1,0L6,0A2,2 90 0 1 8,2L8,7z"
                                      Fill="{DynamicResource Control.Invalid.BorderBrush}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                                <Path Data="M0,0L2,0 8,6 8,8"
                                      Fill="{TemplateBinding Background}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Invalid" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="Validation.HasError" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
