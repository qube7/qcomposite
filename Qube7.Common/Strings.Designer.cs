//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qube7 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Qube7.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item with the same key has already been added..
        /// </summary>
        internal static string AddingDuplicate {
            get {
                return ResourceManager.GetString("AddingDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be an empty string..
        /// </summary>
        internal static string ArgumentEmptyString {
            get {
                return ResourceManager.GetString("ArgumentEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non negative number is required..
        /// </summary>
        internal static string ArgumentNegative {
            get {
                return ResourceManager.GetString("ArgumentNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; type does not inherit from the &apos;{1}&apos; type..
        /// </summary>
        internal static string ArgumentNotAssignable {
            get {
                return ResourceManager.GetString("ArgumentNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; must be defined for the &apos;{1}&apos;..
        /// </summary>
        internal static string AttributeNotDefined {
            get {
                return ResourceManager.GetString("AttributeNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity overflowed and went negative..
        /// </summary>
        internal static string CapacityOverflow {
            get {
                return ResourceManager.GetString("CapacityOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count must be positive and count must refer to a location within the collection..
        /// </summary>
        internal static string CountRangeList {
            get {
                return ResourceManager.GetString("CountRangeList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection was modified after the enumerator was instantiated..
        /// </summary>
        internal static string EnumeratorFailedVersion {
            get {
                return ResourceManager.GetString("EnumeratorFailedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration has either not started or has already finished..
        /// </summary>
        internal static string EnumeratorInvalidPosition {
            get {
                return ResourceManager.GetString("EnumeratorInvalidPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This collection does not support setting extensions by index..
        /// </summary>
        internal static string ExtensionCannotSet {
            get {
                return ResourceManager.GetString("ExtensionCannotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be less than the length of the array..
        /// </summary>
        internal static string IndexGreaterEqualLength {
            get {
                return ResourceManager.GetString("IndexGreaterEqualLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index cannot be larger than the length of the array..
        /// </summary>
        internal static string IndexGreaterLength {
            get {
                return ResourceManager.GetString("IndexGreaterLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index was out of range, must be non-negative and less than the size of the collection..
        /// </summary>
        internal static string IndexRangeList {
            get {
                return ResourceManager.GetString("IndexRangeList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be within the bounds of the list..
        /// </summary>
        internal static string IndexRangeListInsert {
            get {
                return ResourceManager.GetString("IndexRangeListInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event cannot be canceled..
        /// </summary>
        internal static string NotCancelable {
            get {
                return ResourceManager.GetString("NotCancelable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; member must be overridden by a derived class..
        /// </summary>
        internal static string NotOverridden {
            get {
                return ResourceManager.GetString("NotOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string OffsetLengthInvalid {
            get {
                return ResourceManager.GetString("OffsetLengthInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying collection is read-only..
        /// </summary>
        internal static string ReadOnlyCollection {
            get {
                return ResourceManager.GetString("ReadOnlyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; must return a non-null value..
        /// </summary>
        internal static string ReturnsNull {
            get {
                return ResourceManager.GetString("ReturnsNull", resourceCulture);
            }
        }
    }
}
