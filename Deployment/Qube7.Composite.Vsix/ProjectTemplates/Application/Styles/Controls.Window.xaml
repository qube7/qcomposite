<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:q="http://qube7.com/composite/xaml"
                    xmlns:props="clr-namespace:$safeprojectname$.Properties"
                    xmlns:local="clr-namespace:$safeprojectname$">

    <Style x:Key="Window.Button" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Window.TitleBar.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="46" />
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Window.Active.Button" TargetType="{x:Type Button}"
           BasedOn="{StaticResource Window.Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Active.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Window.Button.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Window.Button.Pressed.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="q:WindowBehavior.HandleWindowCommands" Value="True" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="4,4,4,4"
                              CornerRadius="0,0,0,0"
                              CaptionHeight="33"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False">
                    <WindowChrome.GlassFrameThickness>
                        <Binding Source="{x:Static SystemParameters.IsGlassEnabled}">
                            <Binding.Converter>
                                <q:SwitchConverter>
                                    <q:SwitchCase When="{x:Static q:BooleanBox.True}">
                                        <Thickness>4,4,4,4</Thickness>
                                    </q:SwitchCase>
                                    <q:SwitchConverter.Default>
                                        <Thickness>0,0,0,0</Thickness>
                                    </q:SwitchConverter.Default>
                                </q:SwitchConverter>
                            </Binding.Converter>
                        </Binding>
                    </WindowChrome.GlassFrameThickness>
                </WindowChrome>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="36" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Background="{TemplateBinding BorderBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="Icon"
                                           Margin="6,0,0,0"
                                           Width="24"
                                           Height="24"
                                           VerticalAlignment="Center"
                                           Source="{TemplateBinding Icon}" />
                                    <TextBlock Grid.Column="1"
                                               Foreground="{DynamicResource Window.TitleBar.Foreground}"
                                               Padding="10,4,10,4"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="{TemplateBinding Title}"
                                               TextTrimming="CharacterEllipsis" />
                                    <StackPanel Grid.Column="2"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Right"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button x:Name="Minimize"
                                                Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                                ToolTip="{q:Resource Minimize, SourceType=props:Resources}"
                                                Style="{StaticResource Window.Button}">
                                            <Path Data="{DynamicResource Geometry.WindowMinimize}"
                                                  Fill="{Binding Foreground, ElementName=Minimize}"
                                                  Stretch="Uniform"
                                                  Width="10"
                                                  Height="10"
                                                  UseLayoutRounding="True" />
                                        </Button>
                                        <Button x:Name="Maximize"
                                                Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                                ToolTip="{q:Resource Maximize, SourceType=props:Resources}"
                                                Style="{StaticResource Window.Button}">
                                            <Path Data="{DynamicResource Geometry.WindowMaximize}"
                                                  Fill="{Binding Foreground, ElementName=Maximize}"
                                                  Stretch="Uniform"
                                                  Width="10"
                                                  Height="10"
                                                  UseLayoutRounding="True" />
                                        </Button>
                                        <Button x:Name="Restore"
                                                Command="{x:Static SystemCommands.RestoreWindowCommand}"
                                                ToolTip="{q:Resource Restore, SourceType=props:Resources}"
                                                Style="{StaticResource Window.Button}"
                                                Visibility="Collapsed">
                                            <Path Data="{DynamicResource Geometry.WindowRestore}"
                                                  Fill="{Binding Foreground, ElementName=Restore}"
                                                  Stretch="Uniform"
                                                  Width="10"
                                                  Height="10"
                                                  UseLayoutRounding="True" />
                                        </Button>
                                        <Button x:Name="Close"
                                                Command="{x:Static SystemCommands.CloseWindowCommand}"
                                                ToolTip="{q:Resource Close, SourceType=props:Resources}"
                                                Style="{StaticResource Window.Button}">
                                            <Path Data="{DynamicResource Geometry.WindowClose}"
                                                  Fill="{Binding Foreground, ElementName=Close}"
                                                  Stretch="Uniform"
                                                  Width="10"
                                                  Height="10"
                                                  UseLayoutRounding="True" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <AdornerDecorator Grid.Row="1">
                                    <ContentPresenter KeyboardNavigation.TabNavigation="Cycle" />
                                </AdornerDecorator>
                                <ResizeGrip x:Name="ResizeGrip"
                                            Grid.Row="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="False"
                                            WindowChrome.ResizeGripDirection="BottomRight"
                                            Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="Minimize" Property="Style" Value="{StaticResource Window.Active.Button}" />
                            <Setter TargetName="Maximize" Property="Style" Value="{StaticResource Window.Active.Button}" />
                            <Setter TargetName="Restore" Property="Style" Value="{StaticResource Window.Active.Button}" />
                            <Setter TargetName="Close" Property="Style" Value="{StaticResource Window.Active.Button}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="Margin" Value="8,8,8,8" />
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="Minimize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Window.Active.BorderBrush}" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome ResizeBorderThickness="4,4,4,4"
                                      CornerRadius="0,0,0,0"
                                      CaptionHeight="40"
                                      NonClientFrameEdges="None"
                                      UseAeroCaptionButtons="False">
                            <WindowChrome.GlassFrameThickness>
                                <Binding Source="{x:Static SystemParameters.IsGlassEnabled}">
                                    <Binding.Converter>
                                        <q:SwitchConverter>
                                            <q:SwitchCase When="{x:Static q:BooleanBox.True}">
                                                <Thickness>4,4,4,4</Thickness>
                                            </q:SwitchCase>
                                            <q:SwitchConverter.Default>
                                                <Thickness>0,0,0,0</Thickness>
                                            </q:SwitchConverter.Default>
                                        </q:SwitchConverter>
                                    </Binding.Converter>
                                </Binding>
                            </WindowChrome.GlassFrameThickness>
                        </WindowChrome>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:ShellView}"
           BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="Icon">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing Geometry="{DynamicResource Geometry.Logo}"
                                         Brush="{DynamicResource Window.TitleBar.Foreground}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
