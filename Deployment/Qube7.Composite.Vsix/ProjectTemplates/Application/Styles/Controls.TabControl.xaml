<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:q="http://qube7.com/composite/xaml">

    <q:BindingProxy x:Key="BindingProxy.CornerRadius" Value="{DynamicResource Control.CornerRadius}" />

    <Thickness x:Key="ThicknessMask.ThreeSided.Left">0,1,1,1</Thickness>
    <Thickness x:Key="ThicknessMask.ThreeSided.Top">1,0,1,1</Thickness>
    <Thickness x:Key="ThicknessMask.ThreeSided.Right">1,1,0,1</Thickness>
    <Thickness x:Key="ThicknessMask.ThreeSided.Bottom">1,1,1,0</Thickness>

    <CornerRadius x:Key="CornerRadiusMask.Flatten.Left">0,1,1,0</CornerRadius>
    <CornerRadius x:Key="CornerRadiusMask.Flatten.Top">0,0,1,1</CornerRadius>
    <CornerRadius x:Key="CornerRadiusMask.Flatten.Right">1,0,0,1</CornerRadius>
    <CornerRadius x:Key="CornerRadiusMask.Flatten.Bottom">1,1,0,0</CornerRadius>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource TabItem.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="Padding" Value="10,4,10,4" />
        <Setter Property="Height" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={q:ThicknessMaskConverter}, ConverterParameter={StaticResource ThicknessMask.ThreeSided.Bottom}}"
                            CornerRadius="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Bottom}}"
                            Margin="0,0,1,0">
                        <ContentPresenter x:Name="Header"
                                          ContentSource="Header"
                                          TextBlock.Foreground="{DynamicResource Control.Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Header" Property="TextBlock.Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                            <Setter Property="Background" Value="{DynamicResource TabItem.MouseOver.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Control.MouseOver.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Header" Property="TextBlock.Foreground" Value="{DynamicResource Control.Checked.Foreground}" />
                            <Setter Property="Background" Value="{DynamicResource Control.Checked.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Control.Checked.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={q:ThicknessMaskConverter}, ConverterParameter={StaticResource ThicknessMask.ThreeSided.Top}}" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Top}}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={q:ThicknessMaskConverter}, ConverterParameter={StaticResource ThicknessMask.ThreeSided.Right}}" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Right}}" />
                            <Setter TargetName="Border" Property="Margin" Value="0,0,0,1" />
                            <Setter TargetName="Header" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Border" Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={q:ThicknessMaskConverter}, ConverterParameter={StaticResource ThicknessMask.ThreeSided.Left}}" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Left}}" />
                            <Setter TargetName="Border" Property="Margin" Value="0,0,0,1" />
                            <Setter TargetName="Header" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="MaxWidth" Value="{DynamicResource Control.MaxWidth}" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="MaxWidth" Value="{DynamicResource Control.MaxWidth}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Checked.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel KeyboardNavigation.TabNavigation="Local">
                        <TabPanel x:Name="Panel"
                                  DockPanel.Dock="{TemplateBinding TabStripPlacement}"
                                  IsItemsHost="True"
                                  Margin="0,0,-1,0"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Top}}"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Bottom}}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Left}}" />
                            <Setter TargetName="Panel" Property="Margin" Value="0,0,0,-1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Value, Source={StaticResource BindingProxy.CornerRadius}, Converter={q:CornerRadiusMaskConverter}, ConverterParameter={StaticResource CornerRadiusMask.Flatten.Right}}" />
                            <Setter TargetName="Panel" Property="Margin" Value="0,0,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
