<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="4,4,4,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Rectangle Fill="{DynamicResource Control.BorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="Height" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinWidth" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource Control.CornerRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Margin" Value="3,3,3,3" />
                <Setter Property="UseLayoutRounding" Value="True" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="Height" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinWidth" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource Control.CornerRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.Background}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.MouseOver.Background}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Margin" Value="3,3,3,3" />
                <Setter Property="UseLayoutRounding" Value="True" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" />

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" />

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource Control.Selection.Background}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Padding="{TemplateBinding Padding}"
                                          IsTabStop="False" />
                        </Border>
                        <Border x:Name="Invalid"
                                BorderBrush="{DynamicResource Control.Invalid.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="Error"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource TemplatedParent}}"
                                         Style="{DynamicResource ToolTip.Invalid}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  Margin="1,-4,-4,0"
                                  Width="12"
                                  Height="12"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top">
                                <Path Data="M1,0L6,0A2,2 90 0 1 8,2L8,7z"
                                      Fill="{DynamicResource Control.Invalid.BorderBrush}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                                <Path Data="M0,0L2,0 8,6 8,8"
                                      Fill="{TemplateBinding Background}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Invalid" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="Validation.HasError" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2">
                                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0">
                                            <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Control.Focused.BorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBar.ComboBox.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="1"
                              Data="{DynamicResource Geometry.ChevronDown}"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform"
                              Width="10"
                              Height="10"
                              UseLayoutRounding="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="Height" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinWidth" Value="{DynamicResource Control.Height}" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="14" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Button"
                                              Grid.ColumnSpan="2"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ToolBar.ComboBox.ToggleButton}" />
                                <ContentPresenter x:Name="Content"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  IsHitTestVisible="False" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="{TemplateBinding Padding}"
                                         MinHeight="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         FocusVisualStyle="{x:Null}"
                                         Visibility="Collapsed">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Background="Transparent"
                                                          HorizontalScrollBarVisibility="Hidden"
                                                          VerticalScrollBarVisibility="Hidden"
                                                          Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </Grid>
                        </Border>
                        <Border x:Name="Invalid"
                                BorderBrush="{DynamicResource Control.Invalid.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="Error"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource TemplatedParent}}"
                                         Style="{DynamicResource ToolTip.Invalid}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  Margin="1,-4,-4,0"
                                  Width="12"
                                  Height="12"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top">
                                <Path Data="M1,0L6,0A2,2 90 0 1 8,2L8,7z"
                                      Fill="{DynamicResource Control.Invalid.BorderBrush}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                                <Path Data="M0,0L2,0 8,6 8,8"
                                      Fill="{TemplateBinding Background}"
                                      Margin="1,3,0,0"
                                      UseLayoutRounding="True" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               VerticalOffset="1">
                            <Grid Margin="6,6,6,6">
                                <Grid.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="6" Opacity="0.3" />
                                </Grid.Effect>
                                <Border Background="{DynamicResource Control.Background}"
                                        BorderBrush="{DynamicResource Control.BorderBrush}"
                                        BorderThickness="{DynamicResource Control.BorderThickness}"
                                        CornerRadius="{DynamicResource Control.CornerRadius}"
                                        HorizontalAlignment="Stretch"
                                        MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Control.Focused.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="Height" Value="{DynamicResource Control.Width}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Invalid" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="Validation.HasError" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2">
                                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Error" Storyboard.TargetProperty="IsOpen" Duration="0">
                                            <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Control.Focused.BorderBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="MinHeight" Value="{DynamicResource Control.Height}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBar.Thumb.Horizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="2,3,2,3" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Width" Value="10" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="SizeAll" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Rectangle Margin="{TemplateBinding Padding}"
                                   Width="4.9">
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,4,4"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,4,4"
                                              ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="{DynamicResource Control.Foreground}">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,1,1" />
                                                    <RectangleGeometry Rect="2,2,1,1" />
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBar.Thumb.Vertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="3,2,3,2" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Height" Value="11" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="SizeAll" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Rectangle Margin="{TemplateBinding Padding}"
                                   Height="5">
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,4,4"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,4,4"
                                              ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="{DynamicResource Control.Foreground}">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,1,1" />
                                                    <RectangleGeometry Rect="2,2,1,1" />
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBar.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource Control.Item.BorderThickness}" />
        <Setter Property="Margin" Value="{DynamicResource Control.Item.Margin}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource Control.CornerRadius}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Item.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.Background}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Checked.MouseOver.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Checked.MouseOver.Background}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource Control.Disabled.Opacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="FontFamily" Value="{DynamicResource Control.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Control.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Thumb x:Name="Thumb"
                                   DockPanel.Dock="Left"
                                   Style="{StaticResource ToolBar.Thumb.Horizontal}" />
                            <ToggleButton x:Name="Button"
                                          DockPanel.Dock="Right"
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBar.ToggleButton}">
                                <Path x:Name="Glyph"
                                      Data="{DynamicResource Geometry.CaretDown}"
                                      Fill="{Binding Foreground, ElementName=Button}"
                                      Stretch="Uniform"
                                      Width="8"
                                      Height="8"
                                      UseLayoutRounding="True" />
                            </ToggleButton>
                            <Popup x:Name="Popup"
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="False"
                                   PopupAnimation="Slide"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=Button}"
                                   HorizontalOffset="2"
                                   VerticalOffset="2">
                                <Grid Margin="6,6,6,6">
                                    <Grid.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="6" Opacity="0.3" />
                                    </Grid.Effect>
                                    <Border Background="{DynamicResource Control.Background}"
                                            BorderBrush="{DynamicResource Control.BorderBrush}"
                                            BorderThickness="{DynamicResource Control.BorderThickness}"
                                            CornerRadius="{DynamicResource Control.CornerRadius}"
                                            HorizontalAlignment="Stretch">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2,2,2,2"
                                                              WrapWidth="348"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              KeyboardNavigation.TabNavigation="Cycle" />
                                    </Border>
                                </Grid>
                            </Popup>
                            <ToolBarPanel x:Name="PART_ToolBarPanel"
                                          IsItemsHost="True" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="Thumb" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Thumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="Button" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="Popup" Property="Placement" Value="Right" />
                            <Setter TargetName="Glyph" Property="Data" Value="{DynamicResource Geometry.CaretRight}" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource ToolBar.Thumb.Vertical}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
    </Style>

</ResourceDictionary>
